version: 2.1
jobs:
  rubocop:
    docker:
      - image: circleci/ruby:2.7.1-node-browsers
        environment:
          RAILS_ENV: test
          POSTGRES_HOST: 127.0.0.1
      - image: circleci/postgres:11.7
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: gunpla_type_test
          POSTGRES_PASSWORD: password
    working_directory: ~/gunpla-type
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel

  rspec:
    working_directory: ~/gunpla_type
    docker:
      - image: circleci/ruby:2.7.1-node-browsers
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers and verify it is working
          command: |
            set -x
            docker-compose up -d
            docker exec web_app curl -4 --retry 10 --retry-delay 3 --retry-connrefused http://localhost:3000
      # - run:
      #     name: Setup database
      #     command: |
      #       docker-compose exec web bash -c 'yes n | bundle exec rails g spree:install --migrate --seed --sample --auto_accept'
      - run:
          name: Run rspec
          command: docker-compose exec web rspec

workflows:
  version: 2.1
  rubocop_rspec:
    jobs:
      - rubocop
      - rspec:
          requires:
            - rubocop
